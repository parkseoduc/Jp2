package demo1;

//import database.Connector;
//import entity.Student;
//import entity.Subject;
//import factory.DaoFactory;
//
//import java.sql.ResultSet;
//import java.sql.Statement;
//import java.util.ArrayList;
import dao.ResultDAOImpl;
import entity.Result;

import java.util.ArrayList;
import java.util.Scanner;

//public class Main {
//    public static void main(String[] args){
//        try{
//            // ket noi db
//
//
//            ArrayList<Student> listStudent = DaoFactory.getDAO("student").all();
//
//
//
//            for (Student s : listStudent){
//                s.showInfo();
//            }
//            ArrayList<Subject> listSubject = DaoFactory.getDAO("subject").all();
//
//
//
//            // INSERT DATA
////            String insert_sql = "insert into students(name,age,telephone) values('Nguy·ªÖn Huy Long',19,'0988888888')";
////            stt.executeUpdate(insert_sql);
//        }catch (Exception e){
//            System.out.println(e.getMessage());
//        }
        public class Main {
            public static void main(String[] args) {
                ResultDAOImpl resultDAO = new ResultDAOImpl();
                Scanner sc = new Scanner(System.in);

                while (true) {
                    System.out.println("\n========= MENU =========");
                    System.out.println("1. Th√™m k·∫øt qu·∫£");
                    System.out.println("2. C·∫≠p nh·∫≠t k·∫øt qu·∫£");
                    System.out.println("3. X√≥a k·∫øt qu·∫£");
                    System.out.println("4. Hi·ªÉn th·ªã t·∫•t c·∫£ k·∫øt qu·∫£");
                    System.out.println("5. T√¨m k·∫øt qu·∫£ theo ID");
                    System.out.println("0. Tho√°t");
                    System.out.print("Ch·ªçn ch·ª©c nƒÉng: ");
                    int choice = sc.nextInt();

                    switch (choice) {
                        case 1: // Th√™m
                            System.out.print("Nh·∫≠p ID: ");
                            int id = sc.nextInt();
                            System.out.print("Nh·∫≠p ƒëi·ªÉm (mank): ");
                            double mank = sc.nextDouble();
                            System.out.print("Nh·∫≠p student_id: ");
                            int studentId = sc.nextInt();
                            System.out.print("Nh·∫≠p subject_id: ");
                            int subjectId = sc.nextInt();

                            Result newResult = new Result(id, mank, studentId, subjectId);
                            if (resultDAO.create(newResult)) {
                                System.out.println("‚úÖ Th√™m th√†nh c√¥ng!");
                            } else {
                                System.out.println("‚ùå Th√™m th·∫•t b·∫°i!");
                            }
                            break;

                        case 2: // C·∫≠p nh·∫≠t
                            System.out.print("Nh·∫≠p ID k·∫øt qu·∫£ c·∫ßn s·ª≠a: ");
                            int updateId = sc.nextInt();
                            Result existing = resultDAO.findById(updateId);
                            if (existing != null) {
                                System.out.println("Th√¥ng tin c≈©: " + existing);
                                System.out.print("Nh·∫≠p ƒëi·ªÉm m·ªõi (mank): ");
                                double newMank = sc.nextDouble();
                                System.out.print("Nh·∫≠p student_id m·ªõi: ");
                                int newStuId = sc.nextInt();
                                System.out.print("Nh·∫≠p subject_id m·ªõi: ");
                                int newSubId = sc.nextInt();

                                Result updated = new Result(updateId, newMank, newStuId, newSubId);
                                if (resultDAO.update(updated)) {
                                    System.out.println("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!");
                                } else {
                                    System.out.println("‚ùå C·∫≠p nh·∫≠t th·∫•t b·∫°i!");
                                }
                            } else {
                                System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£!");
                            }
                            break;

                        case 3: // X√≥a
                            System.out.print("Nh·∫≠p ID k·∫øt qu·∫£ c·∫ßn x√≥a: ");
                            int deleteId = sc.nextInt();
                            Result result = resultDAO.findById(deleteId);
                            if (result != null) {
                                System.out.println("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a k·∫øt qu·∫£: " + result + " ? (OK ƒë·ªÉ x√°c nh·∫≠n)");
                                String confirm = sc.next();
                                if (confirm.equalsIgnoreCase("OK")) {
                                    if (resultDAO.delete(deleteId)) {
                                        System.out.println("‚úÖ ƒê√£ x√≥a.");
                                    } else {
                                        System.out.println("‚ùå X√≥a th·∫•t b·∫°i!");
                                    }
                                } else {
                                    System.out.println("‚ùå H·ªßy thao t√°c.");
                                }
                            } else {
                                System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£!");
                            }
                            break;

                        case 4: // Hi·ªÉn th·ªã t·∫•t c·∫£
                            ArrayList<Result> all = resultDAO.all();
                            if (all.isEmpty()) {
                                System.out.println("‚ùå Kh√¥ng c√≥ d·ªØ li·ªáu.");
                            } else {
                                for (Result r : all) {
                                    System.out.println(r);
                                }
                            }
                            break;

                        case 5: // T√¨m theo ID
                            System.out.print("Nh·∫≠p ID c·∫ßn t√¨m: ");
                            int searchId = sc.nextInt();
                            Result res = resultDAO.findById(searchId);
                            if (res != null) {
                                System.out.println("üéØ K·∫øt qu·∫£ t√¨m th·∫•y: " + res);
                            } else {
                                System.out.println("‚ùå Kh√¥ng c√≥ k·∫øt qu·∫£.");
                            }
                            break;

                        case 0:
                            System.out.println("üëã T·∫°m bi·ªát!");
                            return;

                        default:
                            System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.");
                    }
                }
            }
        }
//
//    }
//}